[package]
name = "idn-example-consumer-contract"
version = "0.1.0"
authors = ["Ideal Network Contributors <info@ideal.network>"]
license = "MIT OR Apache-2.0"
homepage = "https://ideal.network"
repository = "https://github.com/ideal-lab5/idn-sdk"
edition = "2021"
readme = "README.md"
description = "An example consumer contract for Ideal Network services"

[workspace]

[lints.clippy]
all = { level = "allow", priority = 0 }
correctness = { level = "warn", priority = 1 }
complexity = { level = "warn", priority = 1 }
if-same-then-else = { level = "allow", priority = 2 }
zero-prefixed-literal = { level = "allow", priority = 2 }            # 00_1000_000
type_complexity = { level = "allow", priority = 2 }                  # raison d'etre
nonminimal-bool = { level = "allow", priority = 2 }                  # maybe
borrowed-box = { level = "allow", priority = 2 }                     # Reasonable to fix this one
too-many-arguments = { level = "allow", priority = 2 }               # (Turning this on would lead to)
needless-lifetimes = { level = "allow", priority = 2 }               # generated code
unnecessary_cast = { level = "allow", priority = 2 }                 # Types may change
identity-op = { level = "allow", priority = 2 }                      # One case where we do 0 +
useless_conversion = { level = "allow", priority = 2 }               # Types may change
unit_arg = { level = "allow", priority = 2 }                         # stylistic
option-map-unit-fn = { level = "allow", priority = 2 }               # stylistic
bind_instead_of_map = { level = "allow", priority = 2 }              # stylistic
erasing_op = { level = "allow", priority = 2 }                       # E.g. 0 * DOLLARS
eq_op = { level = "allow", priority = 2 }                            # In tests we test equality.
while_immutable_condition = { level = "allow", priority = 2 }        # false positives
needless_option_as_deref = { level = "allow", priority = 2 }         # false positives
derivable_impls = { level = "allow", priority = 2 }                  # false positives
stable_sort_primitive = { level = "allow", priority = 2 }            # prefer stable sort
extra-unused-type-parameters = { level = "allow", priority = 2 }     # stylistic
default_constructed_unit_structs = { level = "allow", priority = 2 } # stylistic

[dependencies]
ink = { version = "5.1.1", default-features = false }
scale-info = { version = "2.11.6", default-features = false, features = ["derive"] }
sha2 = { version = "0.10.8", default-features = false }
idn-contracts = { path = "../..", default-features = false }
sp-idn-traits = { path = "../../../primitives/traits", default-features = false }
frame-support = { version = "40.1.0", default-features = false }

[dev-dependencies]
serde = { version = "1.0", optional = false }
ink_e2e = { version = "5.1.1" }

[lib]
path = "lib.rs"

[features]
default = ["std"]
std = [
    "ink/std",
    "scale-info/std",
    "sha2/std",
    "idn-contracts/std",
    "sp-idn-traits/std",
    "frame-support/std",
]

ink-as-dependency = []
e2e-tests = []
