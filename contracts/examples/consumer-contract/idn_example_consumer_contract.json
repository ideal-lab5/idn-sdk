{
  "source": {
    "hash": "0x68f57d14cb094a7219052f94315d4a19492e0bbf797c5d124d7ed49bec1f62c8",
    "language": "ink! 5.1.1",
    "compiler": "rustc 1.85.1",
    "build_info": {
      "build_mode": "Release",
      "cargo_contract_version": "5.0.3",
      "rust_toolchain": "stable-x86_64-unknown-linux-gnu",
      "wasm_opt_settings": {
        "keep_debug_symbols": false,
        "optimization_passes": "Z"
      }
    }
  },
  "contract": {
    "name": "idn-example-consumer-contract",
    "version": "0.1.0",
    "authors": [
      "Ideal Network Contributors <info@ideal.network>"
    ],
    "description": "An example consumer contract for Ideal Network services",
    "repository": "https://github.com/ideal-lab5/idn-sdk",
    "homepage": "https://ideal.network/",
    "license": "MIT OR Apache-2.0"
  },
  "image": null,
  "spec": {
    "constructors": [
      {
        "args": [
          {
            "label": "idn_para_id",
            "type": {
              "displayName": [
                "IdnParaId"
              ],
              "type": 22
            }
          },
          {
            "label": "idn_manager_pallet_index",
            "type": {
              "displayName": [
                "IdnManagerPalletIndex"
              ],
              "type": 23
            }
          },
          {
            "label": "self_para_id",
            "type": {
              "displayName": [
                "ConsumerParaId"
              ],
              "type": 24
            }
          },
          {
            "label": "self_contracts_pallet_index",
            "type": {
              "displayName": [
                "ContractsPalletIndex"
              ],
              "type": 25
            }
          },
          {
            "label": "self_contract_call_index",
            "type": {
              "displayName": [
                "ContractsCallIndex"
              ],
              "type": 26
            }
          },
          {
            "label": "max_idn_xcm_fees",
            "type": {
              "displayName": [
                "Option"
              ],
              "type": 27
            }
          }
        ],
        "default": false,
        "docs": [
          "Creates a new ExampleConsumer contract with the specified network configuration.",
          "",
          "This constructor initializes the contract with all necessary parameters for cross-chain",
          "communication with the IDN. The configuration must be accurate for the target",
          "deployment environment to ensure proper XCM message routing and fee handling.",
          "",
          "The contract owner is automatically set to the account that calls this constructor,",
          "granting them exclusive rights to manage randomness subscriptions.",
          "",
          "# Arguments",
          "",
          "* `idn_para_id` - The parachain ID of the IDN in the relay chain ecosystem. This must",
          "  match the actual IDN parachain deployment for XCM routing to succeed.",
          "* `idn_manager_pallet_index` - The pallet index of the IDN Manager pallet within the IDN",
          "  Network's runtime. This is used for constructing XCM calls that target subscription",
          "* `idn_account_id` - The authorized IDN account identifier used to verify that incoming",
          "  randomness pulses originate from legitimate sources. This prevents unauthorized",
          "  accounts from injecting fake randomness into the contract.",
          "* `self_para_id` - The parachain ID where this contract is deployed. This enables the",
          "  IDN to route randomness delivery messages back to the correct chain. management",
          "  functions.",
          "* `self_contracts_pallet_index` - The pallet index of the Contracts pallet on this",
          "  parachain's runtime. Required for XCM callback routing to contract methods.",
          "* `self_contracts_call_index` - The call index of the `call` dispatchable within the",
          "  Contracts pallet.",
          "* `max_idn_xcm_fees` - The maximum amount of native tokens to spend on XCM execution",
          "  fees for IDN operations. This protects against unexpected fee spikes while ensuring",
          "  sufficient budget for normal operations.",
          "",
          "# Returns",
          "",
          "A new ExampleConsumer instance ready for randomness subscription operations.",
          "",
          "# Security Considerations",
          "",
          "- Ensure `idn_account_id` corresponds to a legitimate IDN account",
          "- Verify all parachain IDs and pallet indices match your deployment environment",
          "- Set `max_idn_xcm_fees` high enough for normal operations but low enough to prevent",
          "  abuse"
        ],
        "label": "new",
        "payable": false,
        "returnType": {
          "displayName": [
            "ink_primitives",
            "ConstructorResult"
          ],
          "type": 28
        },
        "selector": "0x9bae9d5e"
      }
    ],
    "docs": [],
    "environment": {
      "accountId": {
        "displayName": [
          "AccountId"
        ],
        "type": 0
      },
      "balance": {
        "displayName": [
          "Balance"
        ],
        "type": 12
      },
      "blockNumber": {
        "displayName": [
          "BlockNumber"
        ],
        "type": 11
      },
      "chainExtension": {
        "displayName": [
          "ChainExtension"
        ],
        "type": 78
      },
      "hash": {
        "displayName": [
          "Hash"
        ],
        "type": 77
      },
      "maxEventTopics": 4,
      "staticBufferSize": 16384,
      "timestamp": {
        "displayName": [
          "Timestamp"
        ],
        "type": 9
      }
    },
    "events": [
      {
        "args": [
          {
            "docs": [],
            "indexed": true,
            "label": "caller",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 0
            }
          }
        ],
        "docs": [],
        "label": "CallerAuthorized",
        "module_path": "idn_example_consumer_contract::example_consumer",
        "signature_topic": "0x56f472039cd8721e39f08fbab375a5c7ebd40199cce5a6b613c6698bcf3b6877"
      },
      {
        "args": [
          {
            "docs": [],
            "indexed": true,
            "label": "pulse",
            "type": {
              "displayName": [
                "Pulse"
              ],
              "type": 7
            }
          }
        ],
        "docs": [],
        "label": "PulseConsumed",
        "module_path": "idn_example_consumer_contract::example_consumer",
        "signature_topic": "0xf624492594d5bff9564f8ec088c6560ad7b46b2f958304a4feeea901271605c8"
      }
    ],
    "lang_error": {
      "displayName": [
        "ink",
        "LangError"
      ],
      "type": 30
    },
    "messages": [
      {
        "args": [
          {
            "label": "number_of_pulses",
            "type": {
              "displayName": [
                "IdnBlockNumber"
              ],
              "type": 11
            }
          },
          {
            "label": "frequency",
            "type": {
              "displayName": [
                "IdnBlockNumber"
              ],
              "type": 11
            }
          },
          {
            "label": "metadata",
            "type": {
              "displayName": [
                "Option"
              ],
              "type": 31
            }
          },
          {
            "label": "sub_id",
            "type": {
              "displayName": [
                "Option"
              ],
              "type": 16
            }
          },
          {
            "label": "req_ref",
            "type": {
              "displayName": [
                "Option"
              ],
              "type": 16
            }
          }
        ],
        "default": false,
        "docs": [
          " Request a quote for a subscription given the number of pulses and frequency required by the subscription.",
          "",
          " This function dispatches an XCM message to the IDN chain to get the quote.",
          " The request should then be handled by the IDN chain and return the quote info to the",
          " [`IdnConsumer::consume_quote`] function along with the `req_ref`.",
          " The `req_ref` is generated by this function and used to identify the request when returned."
        ],
        "label": "request_quote",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 34
        },
        "selector": "0xa9a4a243"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " This function is a way to verify that consume_quote has been properly invoked",
          " via the XCM callback after a user calls request_quote."
        ],
        "label": "get_quote_history",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 38
        },
        "selector": "0x0a25e3ad"
      },
      {
        "args": [
          {
            "label": "credits",
            "type": {
              "displayName": [
                "Credits"
              ],
              "type": 9
            }
          },
          {
            "label": "frequency",
            "type": {
              "displayName": [
                "IdnBlockNumber"
              ],
              "type": 11
            }
          },
          {
            "label": "metadata",
            "type": {
              "displayName": [
                "Option"
              ],
              "type": 31
            }
          }
        ],
        "default": false,
        "docs": [
          " Creates a new randomness subscription with the IDN.",
          "",
          " This method initiates a cross-chain subscription request that establishes ongoing",
          " randomness delivery to this contract. The IDN will automatically deliver",
          " randomness pulses based on the specified frequency until the subscription is",
          " paused, exhausted, or terminated.",
          "",
          " Only the contract owner can create subscriptions, and the contract supports only",
          " one active subscription at a time. If you need different subscription parameters,",
          " update the existing subscription or terminate it before creating a new one.",
          "",
          " # Arguments",
          "",
          " * `credits` - The payment budget for randomness delivery, denominated in IDN credits.",
          "   Higher credit amounts enable longer subscription duration and more randomness",
          "   deliveries before the subscription is automatically terminated.",
          " * `frequency` - The delivery interval measured in IDN block numbers. Smaller values",
          "   result in more frequent randomness delivery, while larger values space out deliveries",
          "   to preserve credits and reduce cross-chain traffic.",
          " * `metadata` - Optional application-specific data associated with this subscription.",
          "   This can be used to store context information, configuration parameters, or other data",
          "   relevant to your randomness consumption logic.",
          "",
          " # Returns",
          "",
          " Returns the newly created subscription ID on success, which can be used to reference",
          " this subscription in future management operations.",
          "",
          " # Errors",
          "",
          " - [`ContractError::Unauthorized`] - Only the contract owner can create subscriptions",
          " - [`ContractError::SubscriptionAlreadyExists`] - An active subscription already exists",
          " - [`ContractError::IdnClientError`] - XCM message sending or execution failed",
          "",
          " # XCM Fees",
          "",
          " This method requires XCM execution fees paid in the relay chain's native token.",
          " Ensure the contract has sufficient balance to cover these fees before calling.",
          " Unused fees are automatically refunded after execution."
        ],
        "label": "create_subscription",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 39
        },
        "selector": "0x2ed5f636"
      },
      {
        "args": [
          {
            "label": "req_ref",
            "type": {
              "displayName": [
                "Option"
              ],
              "type": 16
            }
          },
          {
            "label": "metadata",
            "type": {
              "displayName": [
                "Option"
              ],
              "type": 31
            }
          }
        ],
        "default": false,
        "docs": [
          " Request subscription info for a given subscription ID.",
          "",
          " This function dispatches an XCM message to the IDN chain to get the subscription info.",
          " The request should then be handled by the IDN chain and return the subscription info to the",
          " [`IdnConsumer::consume_sub_info`] function along with the `req_ref`.",
          " The `req_ref` is generated by this function and used to identify the request when returned."
        ],
        "label": "request_sub_info",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 34
        },
        "selector": "0x1b49aa02"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " This function is a way to verify that consume_sub_info has been properly invoked",
          " via the XCM callback after a user calls request_sub_info."
        ],
        "label": "get_sub_info",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 41
        },
        "selector": "0x5e3c918c"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " Temporarily pauses the active randomness subscription.",
          "",
          " This method suspends randomness delivery while preserving the subscription state",
          " and remaining credits. The subscription can be reactivated later using",
          " `reactivate_subscription()` to resume randomness delivery from where it left off.",
          "",
          " Pausing is useful when you need to temporarily halt randomness consumption without",
          " losing your subscription or credits, such as during maintenance periods or when",
          " your application logic needs to process accumulated randomness.",
          "",
          " # Returns",
          "",
          " Returns `Ok(())` if the subscription was successfully paused.",
          "",
          " # Errors",
          "",
          " - [`ContractError::Unauthorized`] - Only the contract owner can pause subscriptions",
          " - [`ContractError::NoActiveSubscription`] - No subscription exists to pause",
          " - [`ContractError::IdnClientError`] - XCM message sending or execution failed",
          "",
          " # XCM Fees",
          "",
          " This method requires XCM execution fees. Ensure sufficient contract balance."
        ],
        "label": "pause_subscription",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 34
        },
        "selector": "0xd88b83d2"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " Reactivates a paused subscription",
          "",
          " The caller must provide sufficient funds to cover the XCM execution costs.",
          "",
          " # Returns",
          "",
          " * `Result<(), ContractError>` - Success or error"
        ],
        "label": "reactivate_subscription",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 34
        },
        "selector": "0x597ac27b"
      },
      {
        "args": [
          {
            "label": "credits",
            "type": {
              "displayName": [
                "Credits"
              ],
              "type": 9
            }
          },
          {
            "label": "frequency",
            "type": {
              "displayName": [
                "IdnBlockNumber"
              ],
              "type": 11
            }
          }
        ],
        "default": false,
        "docs": [
          " Updates the active subscription",
          "",
          " # Arguments",
          "",
          " * `credits` - New number of random values to receive",
          " * `frequency` - New distribution interval for random values",
          "",
          " The caller must provide sufficient funds to cover the XCM execution costs.",
          "",
          " # Returns",
          "",
          " * `Result<(), ContractError>` - Success or error"
        ],
        "label": "update_subscription",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 34
        },
        "selector": "0xfa16811a"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " Cancels the active subscription",
          "",
          " The caller must provide sufficient funds to cover the XCM execution costs.",
          "",
          " # Returns",
          "",
          " * `Result<(), ContractError>` - Success or error"
        ],
        "label": "kill_subscription",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 34
        },
        "selector": "0xd6c21fb4"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " Retrieves the most recently received randomness value.",
          "",
          " This method provides quick access to the latest randomness without needing to",
          " iterate through the complete history. The randomness value is computed as",
          " SHA256 of the BLS signature from the most recent pulse delivery.",
          "",
          " # Returns",
          "",
          " Returns `Some(Rand)` containing the latest 32-byte randomness value, or",
          " `None` if no randomness has been received yet."
        ],
        "label": "get_last_randomness",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 42
        },
        "selector": "0x6f251127"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " Retrieves the history of all received pulses along with their validity status.",
          "",
          " This method returns a chronological record of all pulses delivered to this contract",
          " since deployment. Each entry includes the full pulse data structure and a validity",
          " flag indicating whether the pulse was verified as authentic.",
          " Limited to the most recent 100 entries."
        ],
        "label": "get_pulse_history",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 43
        },
        "selector": "0xaa7da871"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " Retrieves the complete history of all received randomness values.",
          "",
          " This method returns a chronological record of all randomness values delivered",
          " to this contract since deployment. Each entry represents the SHA256 hash of",
          " a pulse signature, providing a verifiable trail of randomness consumption.",
          "",
          " The history is maintained with a maximum of 100 entries, keeping only the",
          " most recent randomness values for efficient storage and gas optimization.",
          "",
          " # Returns",
          "",
          " Returns a vector containing received randomness values in chronological order,",
          " with the oldest values first and the most recent values last."
        ],
        "label": "get_randomness_history",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 44
        },
        "selector": "0xa23ecf96"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " Gets the IDN parachain ID"
        ],
        "label": "get_idn_para_id",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 45
        },
        "selector": "0x83929a7d"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " Gets the IDN Manager pallet index"
        ],
        "label": "get_idn_manager_pallet_index",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 46
        },
        "selector": "0x45d3ed4a"
      },
      {
        "args": [
          {
            "label": "account",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 0
            }
          }
        ],
        "default": false,
        "docs": [],
        "label": "add_authorized_deliverer",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 34
        },
        "selector": "0x92813ee0"
      },
      {
        "args": [
          {
            "label": "account",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 0
            }
          }
        ],
        "default": false,
        "docs": [],
        "label": "remove_authorized_deliverer",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 34
        },
        "selector": "0x368f2d87"
      },
      {
        "args": [],
        "default": false,
        "docs": [],
        "label": "get_authorized_deliverers",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 47
        },
        "selector": "0x4700890c"
      },
      {
        "args": [],
        "default": false,
        "docs": [],
        "label": "get_subscription_id",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 42
        },
        "selector": "0x0df69501"
      },
      {
        "args": [
          {
            "label": "pulse",
            "type": {
              "displayName": [
                "Pulse"
              ],
              "type": 7
            }
          },
          {
            "label": "subscription_id",
            "type": {
              "displayName": [
                "SubscriptionId"
              ],
              "type": 1
            }
          }
        ],
        "default": false,
        "docs": [
          " Processes randomness pulses delivered by the IDN via XCM.",
          "",
          " This method is the primary callback for randomness consumption and is automatically",
          " invoked when the IDN delivers randomness to this contract. It performs",
          " authorization checks, validates the subscription, processes the randomness data,",
          " and updates the contract's state.",
          "",
          " The randomness value is derived by computing SHA256 of the BLS signature contained",
          " in the pulse, providing an unpredictable 32-byte value for application use.",
          "",
          " # Arguments",
          "",
          " * `pulse` - The pulse containing the BLS signature, round number, and metadata",
          " * `subscription_id` - The subscription ID associated with this randomness delivery",
          "",
          " # Returns",
          "",
          " Returns `Ok(())` if the pulse was successfully processed and stored.",
          "",
          " # Errors",
          "",
          " - [`Error::Unauthorized`] - The caller is not the configured IDN account",
          " - [`Error::InvalidSubscriptionId`] - The subscription ID doesn't match the active",
          "   subscription",
          " - [`Error::Other`] - Internal processing errors or invalid contract state",
          "",
          " # Security",
          "",
          " This method enforces strict authorization to ensure only legitimate IDN",
          " accounts can deliver randomness, preventing unauthorized data injection attacks."
        ],
        "label": "IdnConsumer::consume_pulse",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 48
        },
        "selector": "0x5277fe11"
      },
      {
        "args": [
          {
            "label": "quote",
            "type": {
              "displayName": [
                "Quote"
              ],
              "type": 14
            }
          }
        ],
        "default": false,
        "docs": [],
        "label": "IdnConsumer::consume_quote",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 48
        },
        "selector": "0xe508891e"
      },
      {
        "args": [
          {
            "label": "sub_info",
            "type": {
              "displayName": [
                "SubInfoResponse"
              ],
              "type": 50
            }
          }
        ],
        "default": false,
        "docs": [],
        "label": "IdnConsumer::consume_sub_info",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 48
        },
        "selector": "0x6c3a2961"
      }
    ]
  },
  "storage": {
    "root": {
      "layout": {
        "struct": {
          "fields": [
            {
              "layout": {
                "leaf": {
                  "key": "0x00000000",
                  "ty": 0
                }
              },
              "name": "owner"
            },
            {
              "layout": {
                "leaf": {
                  "key": "0x00000000",
                  "ty": 3
                }
              },
              "name": "authorized_deliverers"
            },
            {
              "layout": {
                "enum": {
                  "dispatchKey": "0x00000000",
                  "name": "Option",
                  "variants": {
                    "0": {
                      "fields": [],
                      "name": "None"
                    },
                    "1": {
                      "fields": [
                        {
                          "layout": {
                            "array": {
                              "layout": {
                                "leaf": {
                                  "key": "0x00000000",
                                  "ty": 2
                                }
                              },
                              "len": 32,
                              "offset": "0x00000000"
                            }
                          },
                          "name": "0"
                        }
                      ],
                      "name": "Some"
                    }
                  }
                }
              },
              "name": "last_randomness"
            },
            {
              "layout": {
                "enum": {
                  "dispatchKey": "0x00000000",
                  "name": "Option",
                  "variants": {
                    "0": {
                      "fields": [],
                      "name": "None"
                    },
                    "1": {
                      "fields": [
                        {
                          "layout": {
                            "array": {
                              "layout": {
                                "leaf": {
                                  "key": "0x00000000",
                                  "ty": 2
                                }
                              },
                              "len": 32,
                              "offset": "0x00000000"
                            }
                          },
                          "name": "0"
                        }
                      ],
                      "name": "Some"
                    }
                  }
                }
              },
              "name": "subscription_id"
            },
            {
              "layout": {
                "leaf": {
                  "key": "0x00000000",
                  "ty": 4
                }
              },
              "name": "randomness_history"
            },
            {
              "layout": {
                "leaf": {
                  "key": "0x00000000",
                  "ty": 5
                }
              },
              "name": "pulse_history"
            },
            {
              "layout": {
                "struct": {
                  "fields": [
                    {
                      "layout": {
                        "leaf": {
                          "key": "0x00000000",
                          "ty": 11
                        }
                      },
                      "name": "idn_para_id"
                    },
                    {
                      "layout": {
                        "leaf": {
                          "key": "0x00000000",
                          "ty": 2
                        }
                      },
                      "name": "idn_manager_pallet_index"
                    },
                    {
                      "layout": {
                        "leaf": {
                          "key": "0x00000000",
                          "ty": 11
                        }
                      },
                      "name": "self_para_id"
                    },
                    {
                      "layout": {
                        "leaf": {
                          "key": "0x00000000",
                          "ty": 2
                        }
                      },
                      "name": "self_contracts_pallet_index"
                    },
                    {
                      "layout": {
                        "leaf": {
                          "key": "0x00000000",
                          "ty": 2
                        }
                      },
                      "name": "self_contract_call_index"
                    },
                    {
                      "layout": {
                        "leaf": {
                          "key": "0x00000000",
                          "ty": 12
                        }
                      },
                      "name": "max_idn_xcm_fees"
                    }
                  ],
                  "name": "IdnClient"
                }
              },
              "name": "idn_client"
            },
            {
              "layout": {
                "leaf": {
                  "key": "0x00000000",
                  "ty": 13
                }
              },
              "name": "quote_history"
            },
            {
              "layout": {
                "enum": {
                  "dispatchKey": "0x00000000",
                  "name": "Option",
                  "variants": {
                    "0": {
                      "fields": [],
                      "name": "None"
                    },
                    "1": {
                      "fields": [
                        {
                          "layout": {
                            "struct": {
                              "fields": [
                                {
                                  "layout": {
                                    "array": {
                                      "layout": {
                                        "leaf": {
                                          "key": "0x00000000",
                                          "ty": 2
                                        }
                                      },
                                      "len": 32,
                                      "offset": "0x00000000"
                                    }
                                  },
                                  "name": "req_ref"
                                },
                                {
                                  "layout": {
                                    "array": {
                                      "layout": {
                                        "leaf": {
                                          "key": "0x00000000",
                                          "ty": 2
                                        }
                                      },
                                      "len": 32,
                                      "offset": "0x00000000"
                                    }
                                  },
                                  "name": "sub_id"
                                },
                                {
                                  "layout": {
                                    "leaf": {
                                      "key": "0x00000000",
                                      "ty": 9
                                    }
                                  },
                                  "name": "credits_left"
                                },
                                {
                                  "layout": {
                                    "leaf": {
                                      "key": "0x00000000",
                                      "ty": 9
                                    }
                                  },
                                  "name": "credits"
                                },
                                {
                                  "layout": {
                                    "leaf": {
                                      "key": "0x00000000",
                                      "ty": 11
                                    }
                                  },
                                  "name": "frequency"
                                },
                                {
                                  "layout": {
                                    "enum": {
                                      "dispatchKey": "0x00000000",
                                      "name": "Option",
                                      "variants": {
                                        "0": {
                                          "fields": [],
                                          "name": "None"
                                        },
                                        "1": {
                                          "fields": [
                                            {
                                              "layout": {
                                                "leaf": {
                                                  "key": "0x00000000",
                                                  "ty": 11
                                                }
                                              },
                                              "name": "0"
                                            }
                                          ],
                                          "name": "Some"
                                        }
                                      }
                                    }
                                  },
                                  "name": "last_delivered"
                                },
                                {
                                  "layout": {
                                    "enum": {
                                      "dispatchKey": "0x00000000",
                                      "name": "SubscriptionStateLocal",
                                      "variants": {
                                        "0": {
                                          "fields": [],
                                          "name": "Active"
                                        },
                                        "1": {
                                          "fields": [],
                                          "name": "Paused"
                                        },
                                        "2": {
                                          "fields": [],
                                          "name": "Finalized"
                                        }
                                      }
                                    }
                                  },
                                  "name": "state"
                                }
                              ],
                              "name": "SubInfo"
                            }
                          },
                          "name": "0"
                        }
                      ],
                      "name": "Some"
                    }
                  }
                }
              },
              "name": "sub_info"
            }
          ],
          "name": "ExampleConsumer"
        }
      },
      "root_key": "0x00000000",
      "ty": 15
    }
  },
  "types": [
    {
      "id": 0,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "type": 1,
                "typeName": "[u8; 32]"
              }
            ]
          }
        },
        "path": [
          "ink_primitives",
          "types",
          "AccountId"
        ]
      }
    },
    {
      "id": 1,
      "type": {
        "def": {
          "array": {
            "len": 32,
            "type": 2
          }
        }
      }
    },
    {
      "id": 2,
      "type": {
        "def": {
          "primitive": "u8"
        }
      }
    },
    {
      "id": 3,
      "type": {
        "def": {
          "sequence": {
            "type": 0
          }
        }
      }
    },
    {
      "id": 4,
      "type": {
        "def": {
          "sequence": {
            "type": 1
          }
        }
      }
    },
    {
      "id": 5,
      "type": {
        "def": {
          "sequence": {
            "type": 6
          }
        }
      }
    },
    {
      "id": 6,
      "type": {
        "def": {
          "tuple": [
            7,
            10
          ]
        }
      }
    },
    {
      "id": 7,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "name": "signature",
                "type": 8,
                "typeName": "OpaqueSignature"
              },
              {
                "name": "start",
                "type": 9,
                "typeName": "RoundNumber"
              },
              {
                "name": "end",
                "type": 9,
                "typeName": "RoundNumber"
              }
            ]
          }
        },
        "path": [
          "bp_idn",
          "types",
          "RuntimePulse"
        ]
      }
    },
    {
      "id": 8,
      "type": {
        "def": {
          "array": {
            "len": 48,
            "type": 2
          }
        }
      }
    },
    {
      "id": 9,
      "type": {
        "def": {
          "primitive": "u64"
        }
      }
    },
    {
      "id": 10,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "Valid"
              },
              {
                "index": 1,
                "name": "Invalid"
              }
            ]
          }
        },
        "path": [
          "idn_example_consumer_contract",
          "example_consumer",
          "PulseValidity"
        ]
      }
    },
    {
      "id": 11,
      "type": {
        "def": {
          "primitive": "u32"
        }
      }
    },
    {
      "id": 12,
      "type": {
        "def": {
          "primitive": "u128"
        }
      }
    },
    {
      "id": 13,
      "type": {
        "def": {
          "sequence": {
            "type": 14
          }
        }
      }
    },
    {
      "id": 14,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "name": "req_ref",
                "type": 1,
                "typeName": "RequestReference"
              },
              {
                "name": "fees",
                "type": 12,
                "typeName": "Balance"
              },
              {
                "name": "deposit",
                "type": 12,
                "typeName": "Balance"
              }
            ]
          }
        },
        "params": [
          {
            "name": "Balance",
            "type": 12
          }
        ],
        "path": [
          "pallet_idn_manager",
          "primitives",
          "Quote"
        ]
      }
    },
    {
      "id": 15,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "name": "owner",
                "type": 0,
                "typeName": "<AccountId as::ink::storage::traits::AutoStorableHint<::ink::\nstorage::traits::ManualKey<3548781776u32, ()>,>>::Type"
              },
              {
                "name": "authorized_deliverers",
                "type": 3,
                "typeName": "<Vec<AccountId> as::ink::storage::traits::AutoStorableHint<::\nink::storage::traits::ManualKey<1236129387u32, ()>,>>::Type"
              },
              {
                "name": "last_randomness",
                "type": 16,
                "typeName": "<Option<Rand> as::ink::storage::traits::AutoStorableHint<::ink\n::storage::traits::ManualKey<1658817168u32, ()>,>>::Type"
              },
              {
                "name": "subscription_id",
                "type": 16,
                "typeName": "<Option<SubscriptionId> as::ink::storage::traits::AutoStorableHint\n<::ink::storage::traits::ManualKey<2481872545u32, ()>,>>::Type"
              },
              {
                "name": "randomness_history",
                "type": 4,
                "typeName": "<Vec<Rand> as::ink::storage::traits::AutoStorableHint<::ink::\nstorage::traits::ManualKey<3972262572u32, ()>,>>::Type"
              },
              {
                "name": "pulse_history",
                "type": 5,
                "typeName": "<Vec<(Pulse, PulseValidity)> as::ink::storage::traits::\nAutoStorableHint<::ink::storage::traits::ManualKey<862396828u32, ()\n>,>>::Type"
              },
              {
                "name": "idn_client",
                "type": 17,
                "typeName": "<IdnClient as::ink::storage::traits::AutoStorableHint<::ink::\nstorage::traits::ManualKey<3940387512u32, ()>,>>::Type"
              },
              {
                "name": "quote_history",
                "type": 13,
                "typeName": "<Vec<Quote> as::ink::storage::traits::AutoStorableHint<::ink::\nstorage::traits::ManualKey<1254297625u32, ()>,>>::Type"
              },
              {
                "name": "sub_info",
                "type": 18,
                "typeName": "<Option<SubInfo> as::ink::storage::traits::AutoStorableHint<::\nink::storage::traits::ManualKey<3416159874u32, ()>,>>::Type"
              }
            ]
          }
        },
        "path": [
          "idn_example_consumer_contract",
          "example_consumer",
          "ExampleConsumer"
        ]
      }
    },
    {
      "id": 16,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "None"
              },
              {
                "fields": [
                  {
                    "type": 1
                  }
                ],
                "index": 1,
                "name": "Some"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 1
          }
        ],
        "path": [
          "Option"
        ]
      }
    },
    {
      "id": 17,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "name": "idn_para_id",
                "type": 11,
                "typeName": "ParaId"
              },
              {
                "name": "idn_manager_pallet_index",
                "type": 2,
                "typeName": "PalletIndex"
              },
              {
                "name": "self_para_id",
                "type": 11,
                "typeName": "ParaId"
              },
              {
                "name": "self_contracts_pallet_index",
                "type": 2,
                "typeName": "PalletIndex"
              },
              {
                "name": "self_contract_call_index",
                "type": 2,
                "typeName": "u8"
              },
              {
                "name": "max_idn_xcm_fees",
                "type": 12,
                "typeName": "u128"
              }
            ]
          }
        },
        "path": [
          "idn_contracts",
          "xcm",
          "IdnClient"
        ]
      }
    },
    {
      "id": 18,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "None"
              },
              {
                "fields": [
                  {
                    "type": 19
                  }
                ],
                "index": 1,
                "name": "Some"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 19
          }
        ],
        "path": [
          "Option"
        ]
      }
    },
    {
      "id": 19,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "name": "req_ref",
                "type": 1,
                "typeName": "[u8; 32]"
              },
              {
                "name": "sub_id",
                "type": 1,
                "typeName": "[u8; 32]"
              },
              {
                "name": "credits_left",
                "type": 9,
                "typeName": "u64"
              },
              {
                "name": "credits",
                "type": 9,
                "typeName": "u64"
              },
              {
                "name": "frequency",
                "type": 11,
                "typeName": "u32"
              },
              {
                "name": "last_delivered",
                "type": 20,
                "typeName": "Option<u32>"
              },
              {
                "name": "state",
                "type": 21,
                "typeName": "SubscriptionStateLocal"
              }
            ]
          }
        },
        "path": [
          "idn_contracts",
          "xcm",
          "types",
          "SubInfo"
        ]
      }
    },
    {
      "id": 20,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "None"
              },
              {
                "fields": [
                  {
                    "type": 11
                  }
                ],
                "index": 1,
                "name": "Some"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 11
          }
        ],
        "path": [
          "Option"
        ]
      }
    },
    {
      "id": 21,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "Active"
              },
              {
                "index": 1,
                "name": "Paused"
              },
              {
                "index": 2,
                "name": "Finalized"
              }
            ]
          }
        },
        "path": [
          "idn_contracts",
          "xcm",
          "types",
          "SubscriptionStateLocal"
        ]
      }
    },
    {
      "id": 22,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "OnPaseo"
              },
              {
                "fields": [
                  {
                    "type": 11,
                    "typeName": "ParaId"
                  }
                ],
                "index": 1,
                "name": "Other"
              }
            ]
          }
        },
        "path": [
          "idn_contracts",
          "xcm",
          "types",
          "IdnParaId"
        ]
      }
    },
    {
      "id": 23,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "OnPaseoIdn"
              },
              {
                "fields": [
                  {
                    "type": 2,
                    "typeName": "PalletIndex"
                  }
                ],
                "index": 1,
                "name": "Other"
              }
            ]
          }
        },
        "path": [
          "idn_contracts",
          "xcm",
          "types",
          "IdnManagerPalletIndex"
        ]
      }
    },
    {
      "id": 24,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "OnPaseo"
              },
              {
                "fields": [
                  {
                    "type": 11,
                    "typeName": "ParaId"
                  }
                ],
                "index": 1,
                "name": "Other"
              }
            ]
          }
        },
        "path": [
          "idn_contracts",
          "xcm",
          "types",
          "ConsumerParaId"
        ]
      }
    },
    {
      "id": 25,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "OnPaseoIdnConsumer"
              },
              {
                "fields": [
                  {
                    "type": 2,
                    "typeName": "PalletIndex"
                  }
                ],
                "index": 1,
                "name": "Other"
              }
            ]
          }
        },
        "path": [
          "idn_contracts",
          "xcm",
          "types",
          "ContractsPalletIndex"
        ]
      }
    },
    {
      "id": 26,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "Call"
              },
              {
                "fields": [
                  {
                    "type": 2,
                    "typeName": "u8"
                  }
                ],
                "index": 1,
                "name": "Other"
              }
            ]
          }
        },
        "path": [
          "idn_contracts",
          "xcm",
          "types",
          "ContractsCallIndex"
        ]
      }
    },
    {
      "id": 27,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "None"
              },
              {
                "fields": [
                  {
                    "type": 12
                  }
                ],
                "index": 1,
                "name": "Some"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 12
          }
        ],
        "path": [
          "Option"
        ]
      }
    },
    {
      "id": 28,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 29
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 30
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 29
          },
          {
            "name": "E",
            "type": 30
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 29,
      "type": {
        "def": {
          "tuple": []
        }
      }
    },
    {
      "id": 30,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 1,
                "name": "CouldNotReadInput"
              }
            ]
          }
        },
        "path": [
          "ink_primitives",
          "LangError"
        ]
      }
    },
    {
      "id": 31,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "None"
              },
              {
                "fields": [
                  {
                    "type": 32
                  }
                ],
                "index": 1,
                "name": "Some"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 32
          }
        ],
        "path": [
          "Option"
        ]
      }
    },
    {
      "id": 32,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "type": 33,
                "typeName": "Vec<T>"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 2
          },
          {
            "name": "S",
            "type": null
          }
        ],
        "path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ]
      }
    },
    {
      "id": 33,
      "type": {
        "def": {
          "sequence": {
            "type": 2
          }
        }
      }
    },
    {
      "id": 34,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 35
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 30
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 35
          },
          {
            "name": "E",
            "type": 30
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 35,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 29
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 36
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 29
          },
          {
            "name": "E",
            "type": 36
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 36,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 37,
                    "typeName": "Error"
                  }
                ],
                "index": 0,
                "name": "IdnClientError"
              },
              {
                "index": 1,
                "name": "NoActiveSubscription"
              },
              {
                "index": 2,
                "name": "Unauthorized"
              },
              {
                "index": 3,
                "name": "SubscriptionAlreadyExists"
              },
              {
                "index": 4,
                "name": "InvalidSubscriptionId"
              },
              {
                "index": 5,
                "name": "InvalidPulse"
              },
              {
                "index": 6,
                "name": "Other"
              }
            ]
          }
        },
        "path": [
          "idn_example_consumer_contract",
          "example_consumer",
          "ContractError"
        ]
      }
    },
    {
      "id": 37,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "XcmExecutionFailed"
              },
              {
                "index": 1,
                "name": "XcmSendFailed"
              },
              {
                "index": 2,
                "name": "NonXcmEnvError"
              },
              {
                "index": 3,
                "name": "MethodNotImplemented"
              },
              {
                "index": 4,
                "name": "ConsumePulseError"
              },
              {
                "index": 5,
                "name": "ConsumeQuoteError"
              },
              {
                "index": 6,
                "name": "ConsumeSubInfoError"
              },
              {
                "index": 7,
                "name": "Unauthorized"
              },
              {
                "index": 8,
                "name": "InvalidSubscriptionId"
              },
              {
                "index": 9,
                "name": "CallDataTooLong"
              },
              {
                "index": 10,
                "name": "InvalidParams"
              },
              {
                "index": 11,
                "name": "Other"
              }
            ]
          }
        },
        "path": [
          "idn_contracts",
          "xcm",
          "Error"
        ]
      }
    },
    {
      "id": 38,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 13
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 30
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 13
          },
          {
            "name": "E",
            "type": 30
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 39,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 40
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 30
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 40
          },
          {
            "name": "E",
            "type": 30
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 40,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 1
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 36
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 1
          },
          {
            "name": "E",
            "type": 36
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 41,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 18
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 30
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 18
          },
          {
            "name": "E",
            "type": 30
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 42,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 16
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 30
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 16
          },
          {
            "name": "E",
            "type": 30
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 43,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 5
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 30
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 5
          },
          {
            "name": "E",
            "type": 30
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 44,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 4
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 30
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 4
          },
          {
            "name": "E",
            "type": 30
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 45,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 11
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 30
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 11
          },
          {
            "name": "E",
            "type": 30
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 46,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 2
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 30
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 2
          },
          {
            "name": "E",
            "type": 30
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 47,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 3
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 30
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 3
          },
          {
            "name": "E",
            "type": 30
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 48,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 49
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 30
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 49
          },
          {
            "name": "E",
            "type": 30
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 49,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 29
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 37
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 29
          },
          {
            "name": "E",
            "type": 37
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 50,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "name": "req_ref",
                "type": 1,
                "typeName": "RequestReference"
              },
              {
                "name": "sub",
                "type": 51,
                "typeName": "Sub"
              }
            ]
          }
        },
        "params": [
          {
            "name": "Sub",
            "type": 51
          }
        ],
        "path": [
          "pallet_idn_manager",
          "primitives",
          "SubInfoResponse"
        ]
      }
    },
    {
      "id": 51,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "name": "id",
                "type": 1,
                "typeName": "SubscriptionId"
              },
              {
                "name": "details",
                "type": 54,
                "typeName": "SubscriptionDetails<AccountId, CallData>"
              },
              {
                "name": "credits_left",
                "type": 9,
                "typeName": "Credits"
              },
              {
                "name": "state",
                "type": 76,
                "typeName": "SubscriptionState"
              },
              {
                "name": "created_at",
                "type": 11,
                "typeName": "BlockNumber"
              },
              {
                "name": "updated_at",
                "type": 11,
                "typeName": "BlockNumber"
              },
              {
                "name": "credits",
                "type": 9,
                "typeName": "Credits"
              },
              {
                "name": "frequency",
                "type": 11,
                "typeName": "BlockNumber"
              },
              {
                "name": "metadata",
                "type": 31,
                "typeName": "Option<Metadata>"
              },
              {
                "name": "last_delivered",
                "type": 20,
                "typeName": "Option<BlockNumber>"
              }
            ]
          }
        },
        "params": [
          {
            "name": "AccountId",
            "type": 52
          },
          {
            "name": "BlockNumber",
            "type": 11
          },
          {
            "name": "Credits",
            "type": 9
          },
          {
            "name": "Metadata",
            "type": 32
          },
          {
            "name": "SubscriptionId",
            "type": 1
          },
          {
            "name": "CallData",
            "type": 53
          }
        ],
        "path": [
          "pallet_idn_manager",
          "Subscription"
        ]
      }
    },
    {
      "id": 52,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "type": 1,
                "typeName": "[u8; 32]"
              }
            ]
          }
        },
        "path": [
          "sp_core",
          "crypto",
          "AccountId32"
        ]
      }
    },
    {
      "id": 53,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "type": 33,
                "typeName": "Vec<T>"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 2
          },
          {
            "name": "S",
            "type": null
          }
        ],
        "path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ]
      }
    },
    {
      "id": 54,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "name": "subscriber",
                "type": 52,
                "typeName": "AccountId"
              },
              {
                "name": "target",
                "type": 55,
                "typeName": "Location"
              },
              {
                "name": "call",
                "type": 53,
                "typeName": "CallData"
              },
              {
                "name": "origin_kind",
                "type": 75,
                "typeName": "OriginKind"
              }
            ]
          }
        },
        "params": [
          {
            "name": "AccountId",
            "type": 52
          },
          {
            "name": "CallData",
            "type": 53
          }
        ],
        "path": [
          "pallet_idn_manager",
          "SubscriptionDetails"
        ]
      }
    },
    {
      "id": 55,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "name": "parents",
                "type": 2,
                "typeName": "u8"
              },
              {
                "name": "interior",
                "type": 56,
                "typeName": "Junctions"
              }
            ]
          }
        },
        "path": [
          "staging_xcm",
          "v5",
          "location",
          "Location"
        ]
      }
    },
    {
      "id": 56,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "Here"
              },
              {
                "fields": [
                  {
                    "type": 57,
                    "typeName": "Arc<[Junction; 1]>"
                  }
                ],
                "index": 1,
                "name": "X1"
              },
              {
                "fields": [
                  {
                    "type": 68,
                    "typeName": "Arc<[Junction; 2]>"
                  }
                ],
                "index": 2,
                "name": "X2"
              },
              {
                "fields": [
                  {
                    "type": 69,
                    "typeName": "Arc<[Junction; 3]>"
                  }
                ],
                "index": 3,
                "name": "X3"
              },
              {
                "fields": [
                  {
                    "type": 70,
                    "typeName": "Arc<[Junction; 4]>"
                  }
                ],
                "index": 4,
                "name": "X4"
              },
              {
                "fields": [
                  {
                    "type": 71,
                    "typeName": "Arc<[Junction; 5]>"
                  }
                ],
                "index": 5,
                "name": "X5"
              },
              {
                "fields": [
                  {
                    "type": 72,
                    "typeName": "Arc<[Junction; 6]>"
                  }
                ],
                "index": 6,
                "name": "X6"
              },
              {
                "fields": [
                  {
                    "type": 73,
                    "typeName": "Arc<[Junction; 7]>"
                  }
                ],
                "index": 7,
                "name": "X7"
              },
              {
                "fields": [
                  {
                    "type": 74,
                    "typeName": "Arc<[Junction; 8]>"
                  }
                ],
                "index": 8,
                "name": "X8"
              }
            ]
          }
        },
        "path": [
          "staging_xcm",
          "v5",
          "junctions",
          "Junctions"
        ]
      }
    },
    {
      "id": 57,
      "type": {
        "def": {
          "array": {
            "len": 1,
            "type": 58
          }
        }
      }
    },
    {
      "id": 58,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 59,
                    "typeName": "u32"
                  }
                ],
                "index": 0,
                "name": "Parachain"
              },
              {
                "fields": [
                  {
                    "name": "network",
                    "type": 60,
                    "typeName": "Option<NetworkId>"
                  },
                  {
                    "name": "id",
                    "type": 1,
                    "typeName": "[u8; 32]"
                  }
                ],
                "index": 1,
                "name": "AccountId32"
              },
              {
                "fields": [
                  {
                    "name": "network",
                    "type": 60,
                    "typeName": "Option<NetworkId>"
                  },
                  {
                    "name": "index",
                    "type": 62,
                    "typeName": "u64"
                  }
                ],
                "index": 2,
                "name": "AccountIndex64"
              },
              {
                "fields": [
                  {
                    "name": "network",
                    "type": 60,
                    "typeName": "Option<NetworkId>"
                  },
                  {
                    "name": "key",
                    "type": 63,
                    "typeName": "[u8; 20]"
                  }
                ],
                "index": 3,
                "name": "AccountKey20"
              },
              {
                "fields": [
                  {
                    "type": 2,
                    "typeName": "u8"
                  }
                ],
                "index": 4,
                "name": "PalletInstance"
              },
              {
                "fields": [
                  {
                    "type": 64,
                    "typeName": "u128"
                  }
                ],
                "index": 5,
                "name": "GeneralIndex"
              },
              {
                "fields": [
                  {
                    "name": "length",
                    "type": 2,
                    "typeName": "u8"
                  },
                  {
                    "name": "data",
                    "type": 1,
                    "typeName": "[u8; 32]"
                  }
                ],
                "index": 6,
                "name": "GeneralKey"
              },
              {
                "index": 7,
                "name": "OnlyChild"
              },
              {
                "fields": [
                  {
                    "name": "id",
                    "type": 65,
                    "typeName": "BodyId"
                  },
                  {
                    "name": "part",
                    "type": 67,
                    "typeName": "BodyPart"
                  }
                ],
                "index": 8,
                "name": "Plurality"
              },
              {
                "fields": [
                  {
                    "type": 61,
                    "typeName": "NetworkId"
                  }
                ],
                "index": 9,
                "name": "GlobalConsensus"
              }
            ]
          }
        },
        "path": [
          "staging_xcm",
          "v5",
          "junction",
          "Junction"
        ]
      }
    },
    {
      "id": 59,
      "type": {
        "def": {
          "compact": {
            "type": 11
          }
        }
      }
    },
    {
      "id": 60,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "None"
              },
              {
                "fields": [
                  {
                    "type": 61
                  }
                ],
                "index": 1,
                "name": "Some"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 61
          }
        ],
        "path": [
          "Option"
        ]
      }
    },
    {
      "id": 61,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 1,
                    "typeName": "[u8; 32]"
                  }
                ],
                "index": 0,
                "name": "ByGenesis"
              },
              {
                "fields": [
                  {
                    "name": "block_number",
                    "type": 9,
                    "typeName": "u64"
                  },
                  {
                    "name": "block_hash",
                    "type": 1,
                    "typeName": "[u8; 32]"
                  }
                ],
                "index": 1,
                "name": "ByFork"
              },
              {
                "index": 2,
                "name": "Polkadot"
              },
              {
                "index": 3,
                "name": "Kusama"
              },
              {
                "fields": [
                  {
                    "name": "chain_id",
                    "type": 62,
                    "typeName": "u64"
                  }
                ],
                "index": 7,
                "name": "Ethereum"
              },
              {
                "index": 8,
                "name": "BitcoinCore"
              },
              {
                "index": 9,
                "name": "BitcoinCash"
              },
              {
                "index": 10,
                "name": "PolkadotBulletin"
              }
            ]
          }
        },
        "path": [
          "staging_xcm",
          "v5",
          "junction",
          "NetworkId"
        ]
      }
    },
    {
      "id": 62,
      "type": {
        "def": {
          "compact": {
            "type": 9
          }
        }
      }
    },
    {
      "id": 63,
      "type": {
        "def": {
          "array": {
            "len": 20,
            "type": 2
          }
        }
      }
    },
    {
      "id": 64,
      "type": {
        "def": {
          "compact": {
            "type": 12
          }
        }
      }
    },
    {
      "id": 65,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "Unit"
              },
              {
                "fields": [
                  {
                    "type": 66,
                    "typeName": "[u8; 4]"
                  }
                ],
                "index": 1,
                "name": "Moniker"
              },
              {
                "fields": [
                  {
                    "type": 59,
                    "typeName": "u32"
                  }
                ],
                "index": 2,
                "name": "Index"
              },
              {
                "index": 3,
                "name": "Executive"
              },
              {
                "index": 4,
                "name": "Technical"
              },
              {
                "index": 5,
                "name": "Legislative"
              },
              {
                "index": 6,
                "name": "Judicial"
              },
              {
                "index": 7,
                "name": "Defense"
              },
              {
                "index": 8,
                "name": "Administration"
              },
              {
                "index": 9,
                "name": "Treasury"
              }
            ]
          }
        },
        "path": [
          "xcm",
          "v3",
          "junction",
          "BodyId"
        ]
      }
    },
    {
      "id": 66,
      "type": {
        "def": {
          "array": {
            "len": 4,
            "type": 2
          }
        }
      }
    },
    {
      "id": 67,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "Voice"
              },
              {
                "fields": [
                  {
                    "name": "count",
                    "type": 59,
                    "typeName": "u32"
                  }
                ],
                "index": 1,
                "name": "Members"
              },
              {
                "fields": [
                  {
                    "name": "nom",
                    "type": 59,
                    "typeName": "u32"
                  },
                  {
                    "name": "denom",
                    "type": 59,
                    "typeName": "u32"
                  }
                ],
                "index": 2,
                "name": "Fraction"
              },
              {
                "fields": [
                  {
                    "name": "nom",
                    "type": 59,
                    "typeName": "u32"
                  },
                  {
                    "name": "denom",
                    "type": 59,
                    "typeName": "u32"
                  }
                ],
                "index": 3,
                "name": "AtLeastProportion"
              },
              {
                "fields": [
                  {
                    "name": "nom",
                    "type": 59,
                    "typeName": "u32"
                  },
                  {
                    "name": "denom",
                    "type": 59,
                    "typeName": "u32"
                  }
                ],
                "index": 4,
                "name": "MoreThanProportion"
              }
            ]
          }
        },
        "path": [
          "xcm",
          "v3",
          "junction",
          "BodyPart"
        ]
      }
    },
    {
      "id": 68,
      "type": {
        "def": {
          "array": {
            "len": 2,
            "type": 58
          }
        }
      }
    },
    {
      "id": 69,
      "type": {
        "def": {
          "array": {
            "len": 3,
            "type": 58
          }
        }
      }
    },
    {
      "id": 70,
      "type": {
        "def": {
          "array": {
            "len": 4,
            "type": 58
          }
        }
      }
    },
    {
      "id": 71,
      "type": {
        "def": {
          "array": {
            "len": 5,
            "type": 58
          }
        }
      }
    },
    {
      "id": 72,
      "type": {
        "def": {
          "array": {
            "len": 6,
            "type": 58
          }
        }
      }
    },
    {
      "id": 73,
      "type": {
        "def": {
          "array": {
            "len": 7,
            "type": 58
          }
        }
      }
    },
    {
      "id": 74,
      "type": {
        "def": {
          "array": {
            "len": 8,
            "type": 58
          }
        }
      }
    },
    {
      "id": 75,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "Native"
              },
              {
                "index": 1,
                "name": "SovereignAccount"
              },
              {
                "index": 2,
                "name": "Superuser"
              },
              {
                "index": 3,
                "name": "Xcm"
              }
            ]
          }
        },
        "path": [
          "pallet_idn_manager",
          "primitives",
          "OriginKind"
        ]
      }
    },
    {
      "id": 76,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "Active"
              },
              {
                "index": 1,
                "name": "Paused"
              },
              {
                "index": 2,
                "name": "Finalized"
              }
            ]
          }
        },
        "path": [
          "pallet_idn_manager",
          "SubscriptionState"
        ]
      }
    },
    {
      "id": 77,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "type": 1,
                "typeName": "[u8; 32]"
              }
            ]
          }
        },
        "path": [
          "ink_primitives",
          "types",
          "Hash"
        ]
      }
    },
    {
      "id": 78,
      "type": {
        "def": {
          "variant": {}
        },
        "path": [
          "ink_env",
          "types",
          "NoChainExtension"
        ]
      }
    }
  ],
  "version": 5
}