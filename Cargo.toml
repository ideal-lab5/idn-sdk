[workspace]
members = [
    "client/consensus/randomness-beacon",
    "primitives/consensus/randomness-beacon",
    "primitives/crypto",
    "primitives/traits",
    "pallets/randomness-beacon",
    "pallets/idn-consumer",
    "pallets/idn-manager",
    "pallets/timelock",
    "chains/ideal-network/runtime",
    "chains/ideal-network/node",
    "chains/ideal-network/bridge",
    "chains/idn-consumer-chain/runtime",
    "chains/idn-consumer-chain/node",
    "contracts/timelock-macro"
]
resolver = "2"

[workspace.package]
edition = "2021"
authors = ["Ideal Labs <hello@idealabs.network>"]
repository = "https://github.com/ideal-lab5/idn-sdk"
homepage = "https://idealabs.network"
license = "Apache-2.0"

[workspace.lints.rust]
suspicious_double_ref_op = { level = "allow", priority = 2 }

[workspace.lints.clippy]
all = { level = "allow", priority = 0 }
correctness = { level = "warn", priority = 1 }
complexity = { level = "warn", priority = 1 }
if-same-then-else = { level = "allow", priority = 2 }
zero-prefixed-literal = { level = "allow", priority = 2 }            # 00_1000_000
type_complexity = { level = "allow", priority = 2 }                  # raison d'etre
nonminimal-bool = { level = "allow", priority = 2 }                  # maybe
borrowed-box = { level = "allow", priority = 2 }                     # Reasonable to fix this one
too-many-arguments = { level = "allow", priority = 2 }               # (Turning this on would lead to)
needless-lifetimes = { level = "allow", priority = 2 }               # generated code
unnecessary_cast = { level = "allow", priority = 2 }                 # Types may change
identity-op = { level = "allow", priority = 2 }                      # One case where we do 0 +
useless_conversion = { level = "allow", priority = 2 }               # Types may change
unit_arg = { level = "allow", priority = 2 }                         # stylistic
option-map-unit-fn = { level = "allow", priority = 2 }               # stylistic
bind_instead_of_map = { level = "allow", priority = 2 }              # stylistic
erasing_op = { level = "allow", priority = 2 }                       # E.g. 0 * DOLLARS
eq_op = { level = "allow", priority = 2 }                            # In tests we test equality.
while_immutable_condition = { level = "allow", priority = 2 }        # false positives
needless_option_as_deref = { level = "allow", priority = 2 }         # false positives
derivable_impls = { level = "allow", priority = 2 }                  # false positives
stable_sort_primitive = { level = "allow", priority = 2 }            # prefer stable sort
extra-unused-type-parameters = { level = "allow", priority = 2 }     # stylistic
default_constructed_unit_structs = { level = "allow", priority = 2 } # stylistic

[workspace.dependencies]
color-print = "0.3.7"
smallvec = { version = "1.13.2", default-features = false }

# Async, Concurrency, & Networking
async-std = "1.13.0"
async-trait = "0.1.86"
futures = "0.3.31"
futures-timer = "3.0.3"
libp2p = { version = "0.55.0", features = [
    "async-std",
    "dns",
    "gossipsub",
    "identify",
    "macros",
    "noise",
    "ping",
    "tcp",
    "tokio",
    "websocket",
    "quic",
    "yamux",
] }
thiserror = { version = "1.0.69" }
tokio = { version = "^1", features = ["full"] }
tracing = { version = "0.1.41" }
tracing-test = { version = " 0.2.5" }

# Testing
proptest = "1.7.0"

# Serialization
array-bytes = { version = "6.2.2", default-features = false }
hex = { version = "0.4", features = ["serde"], default-features = false }
hex-literal = "0.4.1"
prost = { version = "0.13.4", default-features = false, features = [
    "prost-derive",
] }
serde = { version = "1.0.217", default-features = false }
serde_json = { version = "1.0.137", default-features = false }

# Polkadot & Substrate
frame-benchmarking = { version = "40.0.0", default-features = false }
frame-executive = { version = "40.0.0", default-features = false }
frame-support = { version = "40.1.0", default-features = false }
frame-system = { version = "40.1.0", default-features = false }
frame-system-benchmarking = { version = "40.0.0", default-features = false }
frame-system-rpc-runtime-api = { version = "36.0.0", default-features = false }
frame-metadata-hash-extension = { version = "0.8.0", default-features = false }
frame-try-runtime = { version = "0.46.0", default-features = false }
pallet-aura = { version = "39.0.0", default-features = false }
pallet-authorship = { version = "40.0.0", default-features = false }
pallet-balances = { version = "41.1.0", default-features = false }
pallet-message-queue = { version = "43.1.0", default-features = false }
pallet-preimage = { version = "40.0.0", default-features = false }
pallet-session = { version = "40.0.0", default-features = false }
pallet-sudo = { version = "40.0.0", default-features = false }
pallet-timestamp = { version = "39.0.0", default-features = false }
pallet-transaction-payment = { version = "40.0.0", default-features = false }
pallet-transaction-payment-rpc = "43.0.0"
pallet-transaction-payment-rpc-runtime-api = { version = "40.0.0", default-features = false }
polkadot-sdk = { version = "2503.0.1", default-features = false }
sc-basic-authorship = { version = "0.49.0", default-features = false }
sc-block-builder = { version = "0.44.0", default-features = false }
sc-cli = { version = "0.51.0", default-features = false }
sc-client-api = { version = "39.0.0", default-features = false }
sc-consensus = { version = "0.48.0", default-features = false }
sc-consensus-aura = { version = "0.49.0", default-features = false }
sc-consensus-manual-seal = { version = "0.50.0", default-features = false }
sc-executor = { version = "0.42.0", default-features = false }
sc-offchain = { version = "44.0.0", default-features = false }
sc-service = { version = "0.50.0", default-features = false }
sc-telemetry = { version = "28.1.0", default-features = false }
sc-transaction-pool = { version = "39.0.0", default-features = false }
sc-transaction-pool-api = { version = "39.0.0", default-features = false }
sc-network = { version = "0.49.0", default-features = false }
sc-utils = { version = "18.0.0", default-features = false }
sp-arithmetic = { version = "26.0.0", default-features = false }
sp-api = { version = "36.0.1", default-features = false }
sp-blockchain = { version = "39.0.0", default-features = false }
sp-block-builder = { version = "36.0.0", default-features = false }
sp-consensus = "0.42.0"
sp-core = { version = "36.1.0", default-features = false }
sp-genesis-builder = { version = "0.17.0", default-features = false }
sp-inherents = { version = "36.0.0", default-features = false }
sp-io = { version = "40.0.0", default-features = false }
sp-keystore = { version = "0.42.0", default-features = false }
sp-runtime = { version = "41.1.0", default-features = false }
sp-std = { version = "14.0.0", default-features = false }
sp-timestamp = { version = "36.0.0", default-features = false }
sp-version = { version = "39.0.0", default-features = false }
substrate-frame-rpc-system = { version = "43.0.0", default-features = false }
frame-benchmarking-cli = "47.0.0"
frame-support-procedural = { version = "33.0.0", default-features = false }
prometheus-endpoint = { version = "0.17.2", default-features = false, package = "substrate-prometheus-endpoint" }
sc-chain-spec = { version = "42.0.0", default-features = false }
sc-network-sync = { version = "0.48.0", default-features = false }
sc-rpc = { version = "44.0.0", default-features = false }
sc-sysinfo = { version = "42.0.0", default-features = false }
sc-tracing = { version = "39.0.0", default-features = false }
sp-consensus-aura = { version = "0.42.0", default-features = false }
sp-keyring = { version = "41.0.0", default-features = false }
sp-offchain = { version = "36.0.0", default-features = false }
sp-session = { version = "38.1.0", default-features = false }
sp-transaction-pool = { version = "36.0.0", default-features = false }
sp-weights = { version = "31.1.0", default-features = false} 

# Contracts & pallet-revive
pallet-contracts = { version = "40.1.0", default-features = false }
pallet-insecure-randomness-collective-flip = { version = "28.0.0", default-features = false }
pallet-revive = { version = "0.6.0", default-features = false }

# Build
substrate-build-script-utils = { version = "11.0.0", default-features = false }
substrate-wasm-builder = "26.0.0"

# Polkadot
pallet-xcm = { version = "19.1.1", default-features = false }
polkadot-cli = { version = "23.0.0", default-features = false }
polkadot-parachain-primitives = { version = "16.1.0", default-features = false }
polkadot-core-primitives = { version = "17.1.0", default-features = false }
polkadot-primitives = { version = "18.1.0", default-features = false }
polkadot-runtime-common = { version = "19.1.0", default-features = false }
xcm = { version = "16.1.0", default-features = false, package = "staging-xcm" }
xcm-builder = { version = "20.0.0", default-features = false, package = "staging-xcm-builder" }
xcm-executor = { version = "19.1.0", package = "staging-xcm-executor", default-features = false }
xcm-runtime-apis = { version = "0.7.1", default-features = false }

# Arkworks & Crypto
ark-bls12-381 = { version = "0.5.0", features = [
    "curve",
], default-features = false }
ark-serialize = { version = "0.5.0", features = [
    "derive",
], default-features = false }
ark-ec = { version = "0.5.0", default-features = false }
ark-ff = { version = "0.5.0", default-features = false }
ark-std = { version = "0.5.0", default-features = false }
rand = "0.8.5"
rand_chacha = { version = "0.9.0", default-features = false }
sha2 = { version = "0.10.2", default-features = false }
timelock = { version = "0.3.0", default-features = false } 

# Logging & Utilities
clap = { version = "4.5.26", features = ["derive"] }
docify = { version = "0.2.9", default-features = false }
jsonrpsee = { version = "0.24.7", features = ["server"] }
log = { version = "0.4.26", default-features = false }
simple-mermaid = { version = "0.1.1", default-features = false }
substrate-test-utils = { version = "3.0.0" }


# Parity SCALE Codec
codec = { package = "parity-scale-codec", version = "3.7.4", default-features = false, features = [
    "derive",
] }
scale-info = { version = "2.11.6", default-features = false, features = [
    "derive",
] }

# Cumulus
cumulus-client-cli = { version = "0.22.0", default-features = false }
cumulus-client-collator = { version = "0.22.0", default-features = false }
cumulus-client-consensus-aura = { version = "0.22.0", default-features = false }
cumulus-client-consensus-common = { version = "0.22.0", default-features = false }
cumulus-client-consensus-proposer = { version = "0.19.0", default-features = false }
cumulus-client-service = { version = "0.23.0", default-features = false }
cumulus-pallet-aura-ext = { version = "0.20.0", default-features = false }
cumulus-pallet-parachain-system = { version = "0.20.0", default-features = false }
cumulus-pallet-session-benchmarking = { version = "21.0.0", default-features = false }
cumulus-pallet-xcm = { version = "0.19.1", default-features = false }
cumulus-pallet-xcmp-queue = { version = "0.20.0", default-features = false }
cumulus-primitives-aura = { version = "0.17.0", default-features = false }
cumulus-primitives-core = { version = "0.18.1", default-features = false }
cumulus-primitives-parachain-inherent = { version = "0.18.1", default-features = false }
cumulus-primitives-storage-weight-reclaim = { version = "11.0.0", default-features = false }
cumulus-primitives-utility = { version = "0.20.0", default-features = false }
cumulus-relay-chain-interface = { version = "0.22.0", default-features = false }
pallet-collator-selection = { version = "21.0.0", default-features = false }
parachains-common = { version = "21.0.0", default-features = false }
parachain-info = { version = "0.20.0", package = "staging-parachain-info", default-features = false }

# IDN
bp-idn = { path = "./chains/ideal-network/bridge", default-features = false }
pallet-idn-manager = { path = "./pallets/idn-manager", default-features = false }
pallet-idn-consumer = { path = "./pallets/idn-consumer", default-features = false }
pallet-randomness-beacon = { path = "./pallets/randomness-beacon", default-features = false }
pallet-timelock-transactions = { path = "./pallets/timelock", default-features = false }
sc-consensus-randomness-beacon = { path = "./client/consensus/randomness-beacon", default-features = false }
sp-consensus-randomness-beacon = { path = "./primitives/consensus/randomness-beacon", default-features = false }
sp-idn-crypto = { path = "./primitives/crypto", default-features = false }
sp-idn-traits = { path = "./primitives/traits", default-features = false }
idn-sdk-kitchensink-runtime = { path = "./chains/kitchensink/runtime", default-features = false }
idn-sdk-kitchensink-node = { path = "./chains/kitchensink/node" }
idn-runtime = { path = "./chains/ideal-network/runtime", default-features = false }
idn-node = { path = "./chains/ideal-network/node" }
idn-consumer-runtime = { path = "./chains/idn-consumer-chain/runtime", default-features = false }
idn-consumer-node = { path = "./chains/idn-consumer-chain/node" }
