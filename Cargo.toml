[workspace]
members = [
    "client/consensus/randomness-beacon",
    "primitives/consensus/randomness-beacon",
    "pallets/randomness-beacon",
    "pallets/idn-manager",
    "support/traits",
]
resolver = "2"

[workspace.package]
edition = "2021"
authors = ["Ideal Labs <hello@idealabs.network>"]
repository = "https://github.com/ideal-lab5/idn-sdk"
homepage = "https://idealabs.network"
license = "Apache-2.0"

[workspace.lints.rust]
suspicious_double_ref_op = { level = "allow", priority = 2 }

[workspace.lints.clippy]
all = { level = "allow", priority = 0 }
correctness = { level = "warn", priority = 1 }
complexity = { level = "warn", priority = 1 }
if-same-then-else = { level = "allow", priority = 2 }
zero-prefixed-literal = { level = "allow", priority = 2 }            # 00_1000_000
type_complexity = { level = "allow", priority = 2 }                  # raison d'etre
nonminimal-bool = { level = "allow", priority = 2 }                  # maybe
borrowed-box = { level = "allow", priority = 2 }                     # Reasonable to fix this one
too-many-arguments = { level = "allow", priority = 2 }               # (Turning this on would lead to)
needless-lifetimes = { level = "allow", priority = 2 }               # generated code
unnecessary_cast = { level = "allow", priority = 2 }                 # Types may change
identity-op = { level = "allow", priority = 2 }                      # One case where we do 0 +
useless_conversion = { level = "allow", priority = 2 }               # Types may change
unit_arg = { level = "allow", priority = 2 }                         # stylistic
option-map-unit-fn = { level = "allow", priority = 2 }               # stylistic
bind_instead_of_map = { level = "allow", priority = 2 }              # stylistic
erasing_op = { level = "allow", priority = 2 }                       # E.g. 0 * DOLLARS
eq_op = { level = "allow", priority = 2 }                            # In tests we test equality.
while_immutable_condition = { level = "allow", priority = 2 }        # false positives
needless_option_as_deref = { level = "allow", priority = 2 }         # false positives
derivable_impls = { level = "allow", priority = 2 }                  # false positives
stable_sort_primitive = { level = "allow", priority = 2 }            # prefer stable sort
extra-unused-type-parameters = { level = "allow", priority = 2 }     # stylistic
default_constructed_unit_structs = { level = "allow", priority = 2 } # stylistic

[workspace.dependencies]
# Async, Concurrency, & Networking
async-trait = "=0.1.86"
futures = "=0.3"
futures-timer = "=3.0.3"
libp2p = { version = "=0.55.0", features = [
    "gossipsub",
    "noise",
    "tcp",
    "ping",
    "dns",
    "async-std",
    "tokio",
    "websocket",
    "quic",
    "yamux",
] }
thiserror = { version = "=1.0.64" }
tokio = { version = "^1", features = ["full"] }

# Serialization
array-bytes = { version = "=6.2.2", default-features = false }
hex = { version = "=0.4", features = ["serde"], default-features = false }
prost = { version = "=0.13.4", default-features = false, features = ["prost-derive"] }
serde = { version = "=1.0.219", default-features = false }
serde_json = { version = "=1.0.132", default-features = false }

# Polkadot & Substrate
frame-benchmarking = { version = "=39.0.0", default-features = false }
frame-executive = { version = "3=9.0.0", default-features = false }
frame-support = { version = "=39.0.0", default-features = false }
frame-system = { version = "=39.1.0", default-features = false }
sc-consensus-randomness-beacon = { path = "./client/consensus/randomness-beacon", default-features = false }
sc-utils = { version = "18.0.0", default-features = false }
sp-consensus-randomness-beacon = { path = "./primitives/consensus/randomness-beacon", default-features = false }
sp-core = { version = "=35.0.0", default-features = false }
sp-inherents = { version = "=35.0.0", default-features = false }
sp-io = { version = "=39.0.0", default-features = false }
sp-keystore = { version = "=0.41.0", default-features = false }
sp-runtime = { version = "=40.1.0", default-features = false }

# Arkworks & Crypto
sp-ark-bls12-381 = { git = "https://github.com/paritytech/arkworks-substrate", version = "=0.4.2", default-features = false }
ark-bls12-381 = { version = "=0.4.0", features = ["curve"], default-features = false }
ark-serialize = { version = "=0.4.2", features = ["derive"], default-features = false }
ark-ec = { version = "=0.4.2", default-features = false }
ark-std = { version = "=0.4.0", default-features = false }
sha2 = { version = "=0.10.8", default-features = false }
timelock = { version = "=0.0.1", default-features = false }

# Logging & Utilities
log = { version = "=0.4.26", default-features = false }

# Parity SCALE Codec
codec = { package = "parity-scale-codec", version = "=3.7.4", default-features = false, features = ["derive"] }
scale-info = { version = "=2.11.6", default-features = false, features = ["derive"] }
