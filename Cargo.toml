[workspace]
members = [
    "client/consensus/randomness-beacon",
    "primitives/consensus/randomness-beacon",
    "primitives/traits",
    "primitives/types",
    "pallets/randomness-beacon",
    "pallets/idn-consumer",
    "pallets/idn-manager",
    "chains/kitchensink/runtime",
    "chains/kitchensink/node",
    "chains/ideal-network/runtime",
    "chains/ideal-network/node",
    "chains/idn-consumer/runtime",
    "chains/idn-consumer/node",
    "contracts/idn-client-contract-lib",
    "contracts/idn-example-consumer-contract",
]
resolver = "2"

[workspace.package]
edition = "2021"
authors = ["Ideal Labs <hello@idealabs.network>"]
repository = "https://github.com/ideal-lab5/idn-sdk"
homepage = "https://idealabs.network"
license = "Apache-2.0"

[workspace.lints.rust]
suspicious_double_ref_op = { level = "allow", priority = 2 }

[workspace.lints.clippy]
all = { level = "allow", priority = 0 }
correctness = { level = "warn", priority = 1 }
complexity = { level = "warn", priority = 1 }
if-same-then-else = { level = "allow", priority = 2 }
zero-prefixed-literal = { level = "allow", priority = 2 }            # 00_1000_000
type_complexity = { level = "allow", priority = 2 }                  # raison d'etre
nonminimal-bool = { level = "allow", priority = 2 }                  # maybe
borrowed-box = { level = "allow", priority = 2 }                     # Reasonable to fix this one
too-many-arguments = { level = "allow", priority = 2 }               # (Turning this on would lead to)
needless-lifetimes = { level = "allow", priority = 2 }               # generated code
unnecessary_cast = { level = "allow", priority = 2 }                 # Types may change
identity-op = { level = "allow", priority = 2 }                      # One case where we do 0 +
useless_conversion = { level = "allow", priority = 2 }               # Types may change
unit_arg = { level = "allow", priority = 2 }                         # stylistic
option-map-unit-fn = { level = "allow", priority = 2 }               # stylistic
bind_instead_of_map = { level = "allow", priority = 2 }              # stylistic
erasing_op = { level = "allow", priority = 2 }                       # E.g. 0 * DOLLARS
eq_op = { level = "allow", priority = 2 }                            # In tests we test equality.
while_immutable_condition = { level = "allow", priority = 2 }        # false positives
needless_option_as_deref = { level = "allow", priority = 2 }         # false positives
derivable_impls = { level = "allow", priority = 2 }                  # false positives
stable_sort_primitive = { level = "allow", priority = 2 }            # prefer stable sort
extra-unused-type-parameters = { level = "allow", priority = 2 }     # stylistic
default_constructed_unit_structs = { level = "allow", priority = 2 } # stylistic

[workspace.dependencies]
color-print = "0.3.7"
serde = { version = "1.0.217", default-features = false }
serde_json = { version = "1.0.137", default-features = false }
smallvec = "1.13.2"

# Async, Concurrency, & Networking
async-trait = "0.1.86"
futures = "0.3.31"
futures-timer = "3.0.3"
libp2p = { version = "0.55.0", features = [
    "gossipsub",
    "noise",
    "tcp",
    "ping",
    "dns",
    "async-std",
    "tokio",
    "websocket",
    "quic",
    "yamux",
] }
thiserror = { version = "1.0.64" }
tokio = { version = "^1", features = ["full"] }

# Serialization
array-bytes = { version = "6.2.2", default-features = false }
hex = { version = "0.4", features = ["serde"], default-features = false }
hex-literal = "0.4.1"
prost = { version = "0.13.4", default-features = false, features = ["prost-derive"] }

# Polkadot & Substrate
frame-benchmarking = { version = "39.0.0", default-features = false }
frame-executive = { version = "39.0.0", default-features = false }
frame-support = { version = "39.0.0", default-features = false }
frame-system = { version = "39.1.0", default-features = false }
frame-system-benchmarking = { version = "39.0.0", default-features = false }
frame-system-rpc-runtime-api = { version = "35.0.0", default-features = false }
frame-metadata-hash-extension = { version = "0.7.0", default-features = false }
frame-try-runtime = { version = "0.45.0", default-features = false }
pallet-aura = { version = "38.0.0", default-features = false }
pallet-authorship = { version = "39.0.0", default-features = false }
pallet-balances = { version = "40.0.0", default-features = false }
pallet-message-queue = { version = "42.0.0", default-features = false }
pallet-session = { version = "39.0.0", default-features = false }
pallet-sudo = { version = "39.0.0", default-features = false }
pallet-timestamp = { version = "38.0.0", default-features = false }
pallet-transaction-payment = { version = "39.0.0", default-features = false }
pallet-transaction-payment-rpc = "42.0.0"
pallet-transaction-payment-rpc-runtime-api = { version = "39.0.0", default-features = false }
polkadot-sdk = { version = "0.12.0", default-features = false }
sc-basic-authorship = { version = "0.48.0", default-features = false }
sc-block-builder = { version = "0.44.0", default-features = false }
sc-cli = { version = "0.50.0", default-features = false }
sc-client-api = { version = "38.0.0", default-features = false }
sc-consensus = { version = "0.47.0", default-features = false }
sc-consensus-manual-seal = { version = "0.49.0", default-features = false }
sc-executor = { version = "0.41.0", default-features = false }
sc-offchain = { version = "43.0.0", default-features = false }
sc-service = { version = "0.49.0", default-features = false }
sc-telemetry = { version = "28.0.0", default-features = false }
sc-transaction-pool = { version = "38.1.0", default-features = false }
sc-transaction-pool-api = { version = "38.1.0", default-features = false }
sc-network = { version = "0.48.2", default-features = false }
sc-utils = { version = "18.0.0", default-features = false }
sp-arithmetic = { version = "26.0.0", default-features = false }
sp-api = { version = "35.0.0",  default-features = false }
sp-blockchain = { version = "38.0.0", default-features = false }
sp-block-builder = { version = "35.0.0", default-features = false }
sp-consensus = { version = "0.41.0" }
sp-core = { version = "35.0.0", default-features = false }
sp-genesis-builder = { version = "0.16.0", default-features = false }
sp-inherents = { version = "35.0.0", default-features = false }
sp-io = { version = "39.0.0", default-features = false }
sp-keystore = { version = "0.41.0", default-features = false }
sp-runtime = { version = "40.1.0", default-features = false }
sp-std = { version = "14.0.0", default-features = false }
sp-timestamp = { version = "35.0.0", default-features = false }
sp-version = { version = "38.0.0", default-features = false }
substrate-frame-rpc-system = { version = "42.0.0", default-features = false }
frame-benchmarking-cli = "46.0.0"
frame-support-procedural = { version = "31.0.0", default-features = false }
prometheus-endpoint = { version = "0.17.1", default-features = false, package = "substrate-prometheus-endpoint" }
sc-chain-spec = "41.0.0"
sc-network-sync = "0.47.0"
sc-rpc = "43.0.0"
sc-sysinfo = "41.0.0"
sc-tracing = "38.0.0"
sp-consensus-aura = { version = "0.41.0", default-features = false }
sp-keyring = { version = "40.0.0", default-features = false }
sp-offchain = { version = "35.0.0", default-features = false }
sp-session = { version = "37.0.0", default-features = false }
sp-transaction-pool = { version = "35.0.0", default-features = false }

# Build
substrate-build-script-utils = { version = "11.0.0", default-features = false }
substrate-wasm-builder = "25.0.0"

# Polkadot
pallet-xcm = { version = "18.0.0", default-features = false }
polkadot-cli = "22.0.1"
polkadot-parachain-primitives = { version = "15.0.0", default-features = false }
polkadot-primitives = "17.0.0"
polkadot-runtime-common = { version = "18.0.0", default-features = false }
xcm = { version = "15.0.1", default-features = false, package = "staging-xcm" }
xcm-builder = { version = "18.0.0", default-features = false, package = "staging-xcm-builder" }
xcm-executor = { version = "18.0.0", package = "staging-xcm-executor", default-features = false }

# Arkworks & Crypto
sp-ark-bls12-381 = { git = "https://github.com/paritytech/arkworks-substrate", version = "0.4.2", default-features = false }
ark-bls12-381 = { version = "0.4.0", features = ["curve"], default-features = false }
ark-serialize = { version = "0.4.2", features = ["derive"], default-features = false }
ark-ec = { version = "0.4.2", default-features = false }
ark-std = { version = "0.4.0", default-features = false }
sha2 = { version = "0.10.8", default-features = false }
timelock = { version = "0.0.1", default-features = false }

# Logging & Utilities
clap = { version = "4.5.26", features = ["derive"] }
docify = { version = "0.2.9" }
jsonrpsee = { version = "0.24.7", features = ["server"] }
log = { version = "0.4.26", default-features = false }
simple-mermaid = { version = "0.1.1" }

# Parity SCALE Codec
codec = { package = "parity-scale-codec", version = "3.7.4", default-features = false, features = ["derive"] }
scale = { package = "parity-scale-codec", version = "3.7.4", default-features = false, features = ["derive"] }
parity-scale-codec = { version = "3.7", default-features = false, features = ["derive"] }
scale-info = { version = "2.11", default-features = false, features = ["derive"] }

# ink! dependencies
ink = { version = "5.1.1", default-features = false }
ink_e2e = { version = "5.1.1" }

# Cumulus
cumulus-client-cli = "0.21.0"
cumulus-client-collator = "0.21.0"
cumulus-client-consensus-aura = "0.21.0"
cumulus-client-consensus-common = "0.21.0"
cumulus-client-consensus-proposer = "0.17.0"
cumulus-client-service = "0.22.0"
cumulus-pallet-aura-ext = { version = "0.18.0", default-features = false }
cumulus-pallet-parachain-system = { version = "0.18.0", default-features = false }
cumulus-pallet-session-benchmarking = { version = "20.0.0", default-features = false }
cumulus-pallet-xcm = { version = "0.18.0", default-features = false }
cumulus-pallet-xcmp-queue = { version = "0.18.0", default-features = false }
cumulus-primitives-aura = { version = "0.16.0", default-features = false }
cumulus-primitives-core = { version = "0.17.0", default-features = false }
cumulus-primitives-parachain-inherent = "0.17.0"
cumulus-primitives-storage-weight-reclaim = { version = "9.0.0", default-features = false }
cumulus-primitives-utility = { version = "0.18.0", default-features = false }
cumulus-relay-chain-interface = "0.21.0"
pallet-collator-selection = { version = "20.0.0", default-features = false }
parachains-common = { version = "19.0.0", default-features = false }
parachain-info = { version = "0.18.0", package = "staging-parachain-info", default-features = false }

# IDN
pallet-idn-manager = { path = "./pallets/idn-manager", default-features = false }
pallet-randomness-beacon = { path = "./pallets/randomness-beacon", default-features = false }
sc-consensus-randomness-beacon = { path = "./client/consensus/randomness-beacon", default-features = false }
sp-consensus-randomness-beacon = { path = "./primitives/consensus/randomness-beacon", default-features = false }
sp-idn-traits = { path = "./primitives/traits", default-features = false }
sp-idn-types = { path = "./primitives/types", default-features = false }
idn-client-contract-lib = { path = "./contracts/idn-client-contract-lib", default-features = false }
idn-example-consumer-contract = { path = "./contracts/idn-example-consumer-contract", default-features = false }
idn-sdk-kitchensink-runtime = { path = "./chains/kitchensink/runtime" }
idn-sdk-kitchensink-node = { path = "./chains/kitchensink/node" }
idn-runtime = { path = "./chains/ideal-network/runtime" }
idn-node = { path = "./chains/ideal-network/node" }
idn-consumer-runtime = { path = "./chains/idn-consumer/runtime" }
idn-consumer-node = { path = "./chains/idn-consumer/node" }
