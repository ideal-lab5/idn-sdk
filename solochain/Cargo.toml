[workspace.package]
authors = [
    "Substrate DevHub <https://github.com/substrate-developer-hub>",
    "Ideal Labs <hello@idealabs.network>",
]
edition = "2021"
repository = "https://github.com/ideal-lab5/idn-sdk/"
license = "MIT-0"
homepage = "https://idealabs.network"

[workspace]
members = [
    "node",
    "runtime",
]
resolver = "2"
[profile.release]
panic = "unwind"

[workspace.lints.rust]
suspicious_double_ref_op = { level = "allow", priority = 2 }

[workspace.lints.clippy]
all = { level = "allow", priority = 0 }
correctness = { level = "warn", priority = 1 }
complexity = { level = "warn", priority = 1 }
if-same-then-else = { level = "allow", priority = 2 }
zero-prefixed-literal = { level = "allow", priority = 2 }            # 00_1000_000
type_complexity = { level = "allow", priority = 2 }                  # raison d'etre
nonminimal-bool = { level = "allow", priority = 2 }                  # maybe
borrowed-box = { level = "allow", priority = 2 }                     # Reasonable to fix this one
too-many-arguments = { level = "allow", priority = 2 }               # (Turning this on would lead to)
needless-lifetimes = { level = "allow", priority = 2 }               # generated code
unnecessary_cast = { level = "allow", priority = 2 }                 # Types may change
identity-op = { level = "allow", priority = 2 }                      # One case where we do 0 +
useless_conversion = { level = "allow", priority = 2 }               # Types may change
unit_arg = { level = "allow", priority = 2 }                         # stylistic
option-map-unit-fn = { level = "allow", priority = 2 }               # stylistic
bind_instead_of_map = { level = "allow", priority = 2 }              # stylistic
erasing_op = { level = "allow", priority = 2 }                       # E.g. 0 * DOLLARS
eq_op = { level = "allow", priority = 2 }                            # In tests we test equality.
while_immutable_condition = { level = "allow", priority = 2 }        # false positives
needless_option_as_deref = { level = "allow", priority = 2 }         # false positives
derivable_impls = { level = "allow", priority = 2 }                  # false positives
stable_sort_primitive = { level = "allow", priority = 2 }            # prefer stable sort
extra-unused-type-parameters = { level = "allow", priority = 2 }     # stylistic
default_constructed_unit_structs = { level = "allow", priority = 2 } # stylistic

[workspace.dependencies]
codec = { package = "parity-scale-codec", version = "3.6.1", default-features = false, features = [
	"derive",
] }
scale-info = { version = "2.10.0", default-features = false, features = [
	"derive",
	"serde",
] }
log = { version = "0.4.21", default-features = false }
clap = "4.5.23"
quote = "1.0.37"
futures = "0.3.31"
serde = "1.0.133"
serde_json = { version = "1.0.133", default-features = true }
jsonrpsee = "0.24.7"

# frame
frame-support = { version = "38.0.0",  default-features = false, features = ["experimental"] }
frame-system = { version = "38.0.0",  default-features = false }
frame-try-runtime = { version = "0.44.0",  default-features = false }
frame-executive = { version = "38.0.0",  default-features = false }
frame = { package = "polkadot-sdk-frame", version = "0.7.0", default-features = false, features = [
	"experimental",
	"runtime",
]  }
# RPC related
frame-system-rpc-runtime-api = { version = "34.0.0",  default-features = false }
# Used for runtime benchmarking
frame-benchmarking = { version = "38.0.0",  default-features = false }
frame-benchmarking-cli = "43.0.0"
frame-system-benchmarking = { version = "38.0.0",  default-features = false }
substrate-frame-rpc-system = "39.0.0"

# frame pallets
pallet-aura = { version = "37.0.0",  default-features = false }
pallet-balances = { version = "39.0.0",  default-features = false }
pallet-contracts = { version = "38.0.0",  default-features = false }
pallet-grandpa = { version = "38.0.0",  default-features = false }
pallet-lottery = { version = "38.0.0",  default-features = false }
pallet-sudo = { version = "38.0.0",  default-features = false }
pallet-timestamp = { version = "37.0.0",  default-features = false }
pallet-transaction-payment = { version = "38.0.0",  default-features = false }
pallet-transaction-payment-rpc-runtime-api = { version = "38.0.0",  default-features = false }
pallet-transaction-payment-rpc = "41.0.0"
# The pallet in this template.
pallet-drand = { path = "../pallets/drand", default-features = false, features = ["host-arkworks"]}

# primitives
sp-api = { version = "34.0.0",  default-features = false }
sp-block-builder = { version = "34.0.0",  default-features = false }
sp-consensus-aura = { version = "0.40.0",  default-features = false }
sp-consensus-grandpa = { version = "21.0.0",  default-features = false }
sp-core = { version = "34.0.0",  default-features = false }
sp-inherents = { version = "34.0.0",  default-features = false }
sp-offchain = { version = "34.0.0",  default-features = false }
sp-runtime = { version = "39.0.3",  default-features = false }
sp-session = { version = "36.0.0",  default-features = false }
sp-std = { version = "14.0.0",  default-features = false }
sp-storage = { version = "21.0.0",  default-features = false }
sp-transaction-pool = { version = "34.0.0",  default-features = false }
sp-version = { version = "37.0.0",  default-features = false, features = [
	"serde",
] }
sp-genesis-builder = { default-features = false, version = "0.15.1" }
sp-wasm-interface = "21.0.1"
sp-io = "38.0.0"
sp-timestamp = "34.0.0"
sp-keyring = "39.0.0"
sp-keystore = "0.40.0"
sp-blockchain = "37.0.1"
sp-crypto-ec-utils = "0.14.0"

# substrate client
sc-cli = "0.47.0"
sc-executor = "0.40.1"
sc-network = "0.45.1"
sc-network-types = { version = "0.12.1", default-features = true }
sc-service = "0.46.0"
sc-telemetry = "25.0.0"
sc-transaction-pool = "37.0.0"
sc-transaction-pool-api = "37.0.0"
sc-offchain = "40.0.0"
sc-consensus-aura = "0.45.0"
sc-consensus = "0.44.0"
sc-consensus-grandpa = "0.30.0"
sc-client-api = "37.0.0"
sc-rpc-api = "0.44.0"
sc-basic-authorship = "0.45.0"
sc-utils = "14.0.0"

# libp2p (uses same version as substrate)
libp2p = { version = "0.52.4", features = ["gossipsub", "noise", "tcp", "yamux"] }

# Local Dependencies
drand-example-runtime = { path = "runtime" }
